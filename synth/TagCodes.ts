	export const enum CharCode {
		SPACE = 32,
		HASH = 35,
		DOLLAR_SIGN = 36,
		PERCENT = 37,
		AMPERSAND = 38,
		PLUS = 43,
		DASH = 45,
		DOT = 46,
		NUM_0 = 48,
		NUM_1 = 49,
		NUM_2 = 50,
		NUM_3 = 51,
		NUM_4 = 52,
		NUM_5 = 53,
		NUM_6 = 54,
		NUM_7 = 55,
		NUM_8 = 56,
		NUM_9 = 57,
		EQUALS = 61,
		A =  65,
		B =  66,
		C =  67,
		D =  68,
		E =  69,
		F =  70,
		G =  71,
		H =  72,
		I =  73,
		J =  74,
		K =  75,
		L =  76,
		M =  77,
		N =  78,
		O =  79,
		P =  80,
		Q =  81,
		R =  82,
		S =  83,
		T =  84,
		U =  85,
		V =  86,
		W =  87,
		X =  88,
		Y =  89,
		Z =  90,
		UNDERSCORE = 95,
		a =  97,
		b =  98,
		c =  99,
		d = 100,
		e = 101,
		f = 102,
		g = 103,
		h = 104,
		i = 105,
		j = 106,
		k = 107,
		l = 108,
		m = 109,
		n = 110,
		o = 111,
		p = 112,
		q = 113,
		r = 114,
		s = 115,
		t = 116,
		u = 117,
		v = 118,
		w = 119,
		x = 120,
		y = 121,
		z = 122,
		LEFT_CURLY_BRACE = 123,
		VERTICAL_LINE = 124,
		RIGHT_CURLY_BRACE = 125,
	}
	
	export const enum SongTagCode {
		fmChorus = CharCode.HASH, // [MB]
		muff = CharCode.DOLLAR_SIGN, // [MB]
		beatCount = CharCode.a,
		bars = CharCode.b,
		effect = CharCode.c,
		transition = CharCode.d,
		loopEnd = CharCode.e,
		filter = CharCode.f,
		barCount = CharCode.g,
		chorus = CharCode.h,
		instrumentCount = CharCode.i,
		patternCount = CharCode.j,
		key = CharCode.k,
		loopStart = CharCode.l,
		reverb = CharCode.m,
		channelCount = CharCode.n,
		channelOctave = CharCode.o,
		patterns = CharCode.p,
		harm = CharCode.q, // [MB]
		rhythm = CharCode.r,
		scale = CharCode.s,
		tempo = CharCode.t,
		mix = CharCode.u, // [MB]
		volume = CharCode.v,
		wave = CharCode.w,
		blend = CharCode.x, // [MB]
		riff = CharCode.y, // [MB]
		setSongTheme = CharCode.z, // [MB]
		feedbackAmplitude = CharCode.UNDERSCORE, // [MB] changed
		algorithm = CharCode.A,
		octoff = CharCode.B, // [MB]
		operatorEnvelopes = CharCode.E,
		feedbackType = CharCode.F,
		imute = CharCode.G, // [MB]
		detune = CharCode.H, // [MB]
		ipan = CharCode.L, // [MB]
		operatorAmplitudes = CharCode.P,
		operatorFrequencies = CharCode.Q,
		startInstrument = CharCode.T,
		feedbackEnvelope = CharCode.V,
		sampleRate = CharCode.VERTICAL_LINE, // [MB]
	}